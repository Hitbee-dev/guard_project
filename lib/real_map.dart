import 'dart:async';

import 'package:flutter/material.dart';
import 'package:google_maps_flutter/google_maps_flutter.dart';

class RealMap extends StatefulWidget {
  @override
  State createState() {
    // TODO: implement createState
    return RealMapState();
  }
}

class RealMapState extends State<RealMap> {
  final GlobalKey scaffoldKey = GlobalKey();

  Completer _controller = Completer();
  Map<MarkerId, Marker> markers = {};

  static final CameraPosition _myhome = CameraPosition(
      target: LatLng(37.5040029,127.0408276), zoom: 18);

  static final CameraPosition _mystart = CameraPosition(
      target: LatLng(37.5040029,127.0408276), zoom: 14);

  List slistMarkerIds = List();
  List plistMarkerIds = List();
  List hlistMarkerIds = List();

  int storeselected = 0;
  int policeselected = 0;
  int homeselected = 0;
  int storecount = 0;
  int policecount = 0;
  int homecount = 0;

  void _onMapCreated(GoogleMapController controller) {
    _controller.complete(controller);
  }

  @override
  void initState() {
    // TODO: implement initState
    super.initState();
  }

  @override
  Widget build(BuildContext context) {
    // TODO: implement build
    return Scaffold(
      key: scaffoldKey,
      resizeToAvoidBottomInset: false,
      appBar: AppBar(
        iconTheme: IconThemeData(color: Colors.white),
        backgroundColor: Color(0XFF242959),
        title: Text(
          "내 주위 안심터",
          style: TextStyle(color: Colors.white, fontWeight: FontWeight.bold),
        ),
        centerTitle: true,
      ),
      body: Stack(children: <Widget>[
        GoogleMap(
          initialCameraPosition: _mystart,
          onTap: (_) {},
          mapType: MapType.normal,
          markers: Set.of(markers.values),
          onMapCreated: _onMapCreated,
        ),
        Padding(
          padding: const EdgeInsets.all(16.0),
          child: Align(
            alignment: Alignment.topRight,
            child: Column(
              children: <Widget>[
                FloatingActionButton(
                  heroTag: "rhome",
                  onPressed: _myHome,
                  materialTapTargetSize: MaterialTapTargetSize.padded,
                  backgroundColor: Color(0XFF242959),
                  child: const Icon(Icons.home, color: Colors.white, size: 36.0),
                ),
                SizedBox(height: 16.0),
                FloatingActionButton(
                  heroTag: "rstore",
                  onPressed: _onAddMarkerButtonPressed,
                  materialTapTargetSize: MaterialTapTargetSize.padded,
                  backgroundColor: Color(0XFF242959),
                  child: const Icon(Icons.add_location,
                      color: Colors.white, size: 36.0),
                ),
                SizedBox(height: 16.0),
                FloatingActionButton(
                  heroTag: "rpolice",
                  onPressed: _onPoliceMarkerButtonPressed,
                  materialTapTargetSize: MaterialTapTargetSize.padded,
                  backgroundColor: Color(0XFF242959),
                  child: const Icon(Icons.local_police,
                      color: Colors.white, size: 36.0),
                ),
              ],
            ),
          ),
        ),
      ]),
    );
  }

  Future<void> _myHome() async {
    final GoogleMapController controller = await _controller.future;
    controller.animateCamera(CameraUpdate.newCameraPosition(_myhome));

    final lats = [
      36.306473,
      37.5040029
    ];

    final lngs = [
      127.342582,
      127.0408276
    ];

    final titles = [
      "건양대학교병원",
      "서울상록회관우체국"
    ];

    final address = [
      "대전광역시 서구 가수원동 관저동로 158",
      "서울특별시 강남구 언주로 508 공무원연금관리공단 1층"
    ];

    final markerids = [
      MarkerId("0"),
      MarkerId("156")
    ];

    if (homeselected == 0) {
      for (homecount = 1; homecount < 2; homecount++) {
        hlistMarkerIds.add(markerids[homecount]);
        setState(() {
          markers[markerids[homecount]] = Marker(
              markerId: markerids[homecount],
              position: LatLng(lats[homecount], lngs[homecount]),
              infoWindow:
              InfoWindow(title: titles[homecount], snippet: address[homecount]));
        });
      }
      homecount = 0;
    }
  }

  void _onAddMarkerButtonPressed() {
    final lats = [
      36.306473,
      37.50447644,
      37.49793849,
      37.48327879,
      37.50575289,
      37.50696789,
      37.50281324,
      37.50002022,
      37.50123135,
      37.50343151,
      37.50379623,
      37.5110016,
      37.52735964,
      37.49619956,
      37.49370907,
      37.50061327,
      37.49135108,
      37.50718095,
      37.49870845,
      37.49904229,
      37.5049111,
      37.49187036,
      37.49921862,
      37.49713038,
      37.4906268,
      37.50446584,
      37.49463649,
      37.49478033,
      37.50249105,
      37.50006297,
      37.49210822,
      37.50612109,
      37.51736455,
      37.49924452,
      37.49886335,
      37.50763624,
      37.50687872,
      37.5118897,
      37.50935442,
      37.50878247,
      37.48591591,
      37.48901392,
      37.51523428,
      37.5206751,
      37.49425529,
      37.49327135,
      37.52079818,
      37.52275514,
      37.48017756,
      37.50710195,
      37.52463993,
      37.50502341,
      37.5227458,
      37.47665043,
      37.48010093,
      37.48937085,
      37.52007391,
      37.47453609,
      37.50548793,
      37.5065342,
      37.4779723,
      37.49084311,
      37.50260309,
      37.49665267,
      37.50201925,
      37.51830656,
      37.50683291,
      37.51373516,
      37.49274477,
      37.49591766,
      37.50170095,
      37.50798114,
      37.51086684,
      37.49278102,
      37.47399567,
      37.510147,
      37.51071,
      37.50701533,
      37.5149478,
      37.51035803,
      37.51542352,
      37.50581359,
      37.50581646,
      37.50699342,
      37.50835202,
      37.49239956,
      37.49137882,
      37.50432414,
      37.50456142,
      37.49894783,
      37.48970783,
      37.5068415,
      37.51174382,
      37.51363608,
      37.51750956,
      37.48818979,
      37.5264828,
      37.52555604,
      37.5210751,
      37.5277986,
      37.5241027,
      37.52615559,
      37.5058979,
      37.50197959,
      37.50493038,
      37.49577522,
      37.49491115,
      37.5012463,
      37.5015073,
      37.493937,
      37.52498827,
      37.52224281,
      37.51101612,
      37.48372844,
      37.49020667,
      37.5060467,
      37.51133981,
      37.5171687,
      37.51075976,
      37.49963496,
      37.49558365,
      37.50418208,
      37.49371187,
      37.48789593,
      37.51415691,
      37.51231585,
      37.52900307,
      37.49752076,
      37.502047,
      37.49918796,
      37.49709149,
      37.52028428,
      37.50328574,
      37.47825884,
      37.52097472,
      37.50489975,
      37.4988733,
      37.51532551
    ];

    final lngs = [
      127.342582,
      127.0446016,
      127.0290723,
      127.0606667,
      127.0552317,
      127.0593959,
      127.0590216,
      127.0596579,
      127.0508632,
      127.0503226,
      127.0487214,
      127.0447245,
      127.0301201,
      127.0426953,
      127.0419695,
      127.0423843,
      127.0348909,
      127.0408522,
      127.0350542,
      127.0335776,
      127.0469651,
      127.0315427,
      127.0341504,
      127.046316,
      127.0323053,
      127.0341549,
      127.0396562,
      127.0376344,
      127.0406522,
      127.0303441,
      127.043072,
      127.0283184,
      127.0388632,
      127.052486,
      127.0429987,
      127.0333683,
      127.0544255,
      127.0655094,
      127.0364508,
      127.0343224,
      127.0446928,
      127.0402127,
      127.0489264,
      127.0243938,
      127.03549,
      127.0388218,
      127.0438333,
      127.0420901,
      127.0479354,
      127.0545062,
      127.0159222,
      127.0396179,
      127.0468689,
      127.0493261,
      127.047989,
      127.0679309,
      127.0333674,
      127.0504549,
      127.0335846,
      127.0499949,
      127.0472322,
      127.0814297,
      127.0369958,
      127.0295625,
      127.0359028,
      127.0299147,
      127.0288658,
      127.0410001,
      127.0392941,
      127.0404627,
      127.0412413,
      127.0399553,
      127.0515253,
      127.0755796,
      127.0496392,
      127.0270598,
      127.032119,
      127.0256993,
      127.0363748,
      127.0426027,
      127.0317724,
      127.0541881,
      127.0541589,
      127.059428,
      127.0622431,
      127.057387,
      127.055652,
      127.0520308,
      127.0558023,
      127.0582837,
      127.0333185,
      127.0483418,
      127.0448833,
      127.06179,
      127.0512375,
      127.1017559,
      127.0289462,
      127.0266358,
      127.0284437,
      127.0338293,
      127.0373338,
      127.0383196,
      127.0355017,
      127.0352364,
      127.0433545,
      127.0317378,
      127.0300873,
      127.0403049,
      127.0426502,
      127.0798526,
      127.0492089,
      127.0414904,
      127.0556479,
      127.0597262,
      127.0689959,
      127.0283337,
      127.0255993,
      127.0374511,
      127.0393346,
      127.0534817,
      127.0534926,
      127.05965,
      127.0673376,
      127.0399053,
      127.0484546,
      127.0468366,
      127.0346968,
      127.0442084,
      127.0267602,
      127.0362137,
      127.0308618,
      127.0560505,
      127.0530875,
      127.0499313,
      127.0396933,
      127.0413015,
      127.0414332,
      127.0606165
    ];

    final titles = [
      "건양대학교병원",
      "강남시티점",
      "강남푸르지오점",
      "개포사랑",
      "대치동부점",
      "대치메트로칸점",
      "대치세정점",
      "대치예영",
      "대치우일점",
      "대치한국점",
      "선릉SK허브점",
      "선정릉역점",
      "신사현대점",
      "역삼가화점",
      "역삼건화점",
      "역삼경남점",
      "역삼벚꽃길점",
      "역삼사랑점",
      "역삼에클라트점",
      "역삼유토빌점",
      "역삼점",
      "역삼카이로스점",
      "역삼포스틸점",
      "역삼푸르지오점",
      "역삼푸른점",
      "역삼하나점",
      "역삼형지점",
      "역삼화랑점",
      "큰길타워점",
      "역삼시티점",
      "도곡아이파크점",
      "강남거평타운점",
      "논현강남점",
      "대치태양점",
      "역삼타운점",
      "논현한미점",
      "강남동원",
      "강남엘지",
      "논현동우",
      "논현한영",
      "도곡",
      "도곡럭키본",
      "삼성한울",
      "신사초롱",
      "역삼2",
      "역삼블루",
      "청담본",
      "청담중앙",
      "포이그린",
      "강남동원점",
      "잠원진달래점",
      "역삼프라임",
      "청담타운",
      "포이점",
      "포이그린",
      "개포소망",
      "강남나누리",
      "개포사랑",
      "역삼소망점",
      "삼성승리점",
      "개포럭키점",
      "일원으뜸",
      "역삼지에스점",
      "비전타워점",
      "지에스본점",
      "논현학동점",
      "논현이편한",
      "논현보람",
      "역삼대홍점",
      "역삼싱아",
      "역삼르네상스점",
      "역삼제일",
      "삼성그린",
      "일원석탑점",
      "포이영광점",
      "논현해림점",
      "논현힐탑점",
      "논현한바위점",
      "논현아미가점",
      "논현삼릉역점",
      "논현보람점",
      "대치멤버스점",
      "테헤란로점",
      "메트로칸점",
      "삼성역점",
      "도곡역점",
      "도곡센트레빌점",
      "골드로즈점",
      "대치동아점",
      "대치시내점",
      "도곡공원점",
      "선릉아크로점",
      "삼성플러스원점",
      "삼성현대점",
      "청담역점",
      "수서벤처점",
      "신사증권점",
      "압구정성당점",
      "신사제일점",
      "압구정3점",
      "압구정5점",
      "압구정로데오점",
      "역삼충현점",
      "역삼진미점",
      "역삼상록점",
      "역삼만남점",
      "역삼태극점",
      "역삼태광점",
      "역삼디오빌점",
      "대청역점",
      "청담대로점",
      "청담유시어터점",
      "삼성베스트점",
      "개포1호점",
      "개포2호점",
      "거평타운점 B",
      "논현12호점",
      "논현13호점",
      "논현경복점",
      "대치10호점",
      "대치아이파크점 B",
      "대치으뜸점",
      "대치점",
      "도곡2호점",
      "삼성10호점",
      "삼성8호점",
      "압구정대로점",
      "역삼22호점",
      "역삼8호점",
      "역삼창조점 B",
      "역삼타운점 B",
      "청담루나점",
      "세븐일레븐 대치선릉로점",
      "세븐일레븐 개포본점",
      "세븐일레븐 논현제일점",
      "세븐일레븐 KT강남점",
      "세븐일레븐 역삼은석점",
      "삼성1점"
    ];

    final address = [
      "대전광역시 서구 가수원동 관저동로 158",
      "서울특별시 강남구 역삼동 703-8번지",
      "서울특별시 강남구 역삼1동 825-20번지",
      "강남구 선릉로10길 4",
      "서울시 강남구 대치동 891-42번지",
      "서울시 강남구 대치동 943-24번지 110호",
      "서울시 강남구 대치동 961-13번지",
      "서울시 강남구 대치동 932-36 (삼성로63길 5 예영빌딩 1층)",
      "서울특별시 강남구 대치동 907번지 한협빌딩 101호",
      "서울시 강남구 대치동 889-75번지",
      "서울특별시 강남구 역삼동 708-26번지 SK허브오피스텔(이 주소는 현재 공인중개사)",
      "서울특별시 강남구 삼성동 37-16번지",
      "서울특별시 강남구 신사동 613-3번지",
      "서울시 강남구 역삼동 774-4번지 가화주택 101호",
      "서울특별시 강남구 역삼동 788-26번지",
      "서울시 강남구 역삼동 722번지 경남아너스빌 상가 101호",
      "서울시 강남구 역삼동 835-6번지 송현빌딩 주 1층 1동",
      "서울시 강남구 역삼동 689-34번지",
      "서울특별시 강남구 역삼동 736-24번지 엘지에클라트 101호",
      "서울특별시 강남구 역삼동 735-11번지 101호",
      "서울특별시 강남구 역삼동 705번지",
      "서울특별시 강남구 역삼동 837-2번지",
      "서울시 강남구 역삼동 735-32번지",
      "서울특별시 강남구 역삼동 761-2번지",
      "서울특별시 강남구 역삼동 837-8번지",
      "서울특별시 강남구 역삼동 627번지",
      "서울특별시 강남구 역삼동 797-16번지",
      "서울특별시 강남구 역삼동 790-20번지",
      "서울특별시 강남구 역삼동 677-25번지",
      "서울특별시 강남구 역삼동649-4번지",
      "서울특별시 강남구 도곡동543-7번지 도곡1차아이파크아파트",
      "서울특별시 강남구 논현동203-1번지",
      "서울특별시 강남구 논현동118번지",
      "서울특별시 강남구 대치동921-17번지",
      "서울특별시 강남구 역삼동730-13번지",
      "서울특별시 강남구 논현동192-19번지",
      "서울 강남구 삼성동 143-28 동원빌딩",
      "서울 강남구 삼성동 166-7건호빌딩",
      "서울 강남구 봉은사로37길 13 1층 (논현동 232-5)",
      "서울시 강남구 논현동 229-26(논현로114길 11  B1호 혜광빌딩)",
      "서울 강남구 도곡동 411-16",
      "서울 강남구 남부순환로365길 56 104호 (도곡동 895-4)",
      "서울 강남구 삼성로119길 37(삼성2동 26-17)",
      "서울 강남구 논현로153길 46(신사동 555-13)",
      "서울 강남구 역삼동 789-30번지",
      "서울 강남구 도곡로21길 18 (역삼1동 796-26 삼정빌딩)",
      "서울 강남구 청담동 16-19 1층 101호",
      "서울 강남구 청담동 21-9",
      "서울시 강남구 개포동 1255-6",
      "서울 강남구 테헤란로77길 7(삼성2동 143-28 동원빌딩)",
      "서울 강남구 강남대로 708 1층 (압구정동 386-1 한남대교레인보우카페)",
      "서울 강남구 테헤란로37길 41 (역삼1동 673-18)",
      "서울 강남구 삼성로145길 16 1층 (청담동 7-9 청원빌딩)",
      "서울 강남구 개포로22길 40 1층 (개포4동 1219-5)",
      "서울 강남구 개포로25길 15(개포4동 1255-6)",
      "서울 강남구 개포로 508 109호110호 (개포2동 186-15 소망빌딩)",
      "서울 강남구 언주로147길 10 1층 (논현동 63-19)",
      "서울 강남구 논현로8길 21 1층 (개포동 1187-6)",
      "서울 강남구 봉은사로26길 26 (역삼동 608-12)",
      "서울 강남구 테헤란로63길 17 (삼성동 140-35)",
      "서울 강남구 개포로20길 12(개포4동 1232)",
      "서울 강남구 일원로5길 6 1층 (일원1동 682)",
      "서울 강남구 봉은사로30길 78 1층 (역삼동 668-21)",
      "서울 강남구 테헤란로2길 27 13층(역삼1동 826-26 비전타워)",
      "서울 강남구 논현로93길 3 1층 (역삼동 642-5 호양빌딩)",
      "서울 강남구 논현로146길 11(논현2동 66-35)",
      "서울 강남구 논현동 195-1외2필지논현이편한세상",
      "서울 강남구 논현동 254-22번지 1층",
      "서울 강남구 논현로63길 19(역삼1동 798-29)",
      "서울 강남구 논현로72길 13 1층 (역삼동 769-8 MSPACE빌딩)",
      "서울 강남구 테헤란로38길 6 (역삼2동 719-21 MeMo빌딩)",
      "서울 강남구 언주로108길 6 (역삼1동 688-1)",
      "서울 강남구 삼성로107길 31 1층 (삼성동 123-4)",
      "서울시 강남구 개포동 12-4",
      "서울시 강남구 개포동(개포4동) 1192-4",
      "서울시 강남구 논현동 158-8",
      "서울시 강남구 논현동 175-1",
      "서울시 강남구 논현동 183-11",
      "서울시 강남구 논현동 248-2",
      "서울시 강남구 논현동 278-19",
      "서울시 강남구 논현동 86-4",
      "서울시 강남구 대치동  891-26 대우아이빌",
      "서울시 강남구 대치동 891-6",
      "서울시 강남구 대치동 943-24",
      "서울시 강남구 대치동 946",
      "서울시 강남구 대치동(대치1동) 651",
      "서울시 강남구 대치동(대치1동) 670-1",
      "서울시 강남구 대치동(대치4동) 890-59",
      "서울시 강남구 대치동(대치4동) 894-5",
      "서울시 강남구 대치동(대치4동) 940-6",
      "서울시 강남구 도곡동(도곡1동) 942-11",
      "서울시 강남구 삼성동 140-3",
      "서울시 강남구 삼성동 36-25",
      "서울시 강남구 삼성동(삼성1동) 160-22",
      "서울시 강남구 삼성동(삼성1동) 65",
      "서울시 강남구 수서동 713 현대벤처10호",
      "서울시 강남구 신사동  610-4(압구정로 30길 18)",
      "서울시 강남구 신사동 577",
      "서울시 강남구 신사동 590-22",
      "서울시 강남구 신사동 636-2",
      "서울시 강남구 신사동 653-18",
      "서울시 강남구 신사동 657-28",
      "서울시 강남구 역삼동 659-20",
      "서울시 강남구 역삼동(역삼1동) 643-10",
      "서울시 강남구 역삼동(역삼1동) 700-29",
      "서울시 강남구 역삼동(역삼1동) 827-70",
      "서울시 강남구 역삼동(역삼1동) 831-3",
      "서울시 강남구 역삼동(역삼2동) 719-9",
      "서울시 강남구 역삼동(역삼2동) 720-25",
      "서울시 강남구 일원동 700-10",
      "서울시 강남구 청담동(청담동) 124-4",
      "서울시 강남구 청담동(청담동) 21-17",
      "서울시 강남구 삼성동 152",
      "개포동 168-11",
      "개포3동 186-17",
      "논현동 203-1 거평오피스탈 1층 3호",
      "서울시 강남구 논현1동 139",
      "논현동 113-16",
      "서울 강남구 논현동 273-13",
      "대치1동 919-16",
      "서울시 강남구 대치동 888-1 상가동 104호",
      "서울 강남구 대치동 960-15번지",
      "대치동 511",
      "도곡동 900-2",
      "서울 강남구 삼성동 27-17",
      "삼성동 41-21",
      "신사동 638-2 3",
      "서울 강남구 역삼동 773번지",
      "서울시 강남구 역삼동 813-18",
      "역삼동 739 건영빌딩 1층",
      "역삼동 827-44",
      "청담동72-3",
      "서울 강남구 테헤란로68길 33",
      "서울 강남구 개포로28길 15 1층",
      "서울 강남구 선릉로 641 우암빌딩",
      "서울 강남구 언주로 517 102호/202호",
      "서울 강남구 언주로 79길 33",
      "서울시 강남구 삼성동 106-6"
    ];

    final markerids = [
      MarkerId("0"),
      MarkerId("1"),
      MarkerId("2"),
      MarkerId("3"),
      MarkerId("4"),
      MarkerId("5"),
      MarkerId("6"),
      MarkerId("7"),
      MarkerId("8"),
      MarkerId("9"),
      MarkerId("10"),
      MarkerId("11"),
      MarkerId("12"),
      MarkerId("13"),
      MarkerId("14"),
      MarkerId("15"),
      MarkerId("16"),
      MarkerId("17"),
      MarkerId("18"),
      MarkerId("19"),
      MarkerId("20"),
      MarkerId("21"),
      MarkerId("22"),
      MarkerId("23"),
      MarkerId("24"),
      MarkerId("25"),
      MarkerId("26"),
      MarkerId("27"),
      MarkerId("28"),
      MarkerId("29"),
      MarkerId("30"),
      MarkerId("31"),
      MarkerId("32"),
      MarkerId("33"),
      MarkerId("34"),
      MarkerId("35"),
      MarkerId("36"),
      MarkerId("37"),
      MarkerId("38"),
      MarkerId("39"),
      MarkerId("40"),
      MarkerId("41"),
      MarkerId("42"),
      MarkerId("43"),
      MarkerId("44"),
      MarkerId("45"),
      MarkerId("46"),
      MarkerId("47"),
      MarkerId("48"),
      MarkerId("49"),
      MarkerId("50"),
      MarkerId("51"),
      MarkerId("52"),
      MarkerId("53"),
      MarkerId("54"),
      MarkerId("55"),
      MarkerId("56"),
      MarkerId("57"),
      MarkerId("58"),
      MarkerId("59"),
      MarkerId("60"),
      MarkerId("61"),
      MarkerId("62"),
      MarkerId("63"),
      MarkerId("64"),
      MarkerId("65"),
      MarkerId("66"),
      MarkerId("67"),
      MarkerId("68"),
      MarkerId("69"),
      MarkerId("70"),
      MarkerId("71"),
      MarkerId("72"),
      MarkerId("73"),
      MarkerId("74"),
      MarkerId("75"),
      MarkerId("76"),
      MarkerId("77"),
      MarkerId("78"),
      MarkerId("79"),
      MarkerId("80"),
      MarkerId("81"),
      MarkerId("82"),
      MarkerId("83"),
      MarkerId("84"),
      MarkerId("85"),
      MarkerId("86"),
      MarkerId("87"),
      MarkerId("88"),
      MarkerId("89"),
      MarkerId("90"),
      MarkerId("91"),
      MarkerId("92"),
      MarkerId("93"),
      MarkerId("94"),
      MarkerId("95"),
      MarkerId("96"),
      MarkerId("97"),
      MarkerId("98"),
      MarkerId("99"),
      MarkerId("100"),
      MarkerId("101"),
      MarkerId("102"),
      MarkerId("103"),
      MarkerId("104"),
      MarkerId("105"),
      MarkerId("106"),
      MarkerId("107"),
      MarkerId("108"),
      MarkerId("109"),
      MarkerId("110"),
      MarkerId("111"),
      MarkerId("112"),
      MarkerId("113"),
      MarkerId("114"),
      MarkerId("115"),
      MarkerId("116"),
      MarkerId("117"),
      MarkerId("118"),
      MarkerId("119"),
      MarkerId("120"),
      MarkerId("121"),
      MarkerId("122"),
      MarkerId("123"),
      MarkerId("124"),
      MarkerId("125"),
      MarkerId("126"),
      MarkerId("127"),
      MarkerId("128"),
      MarkerId("129"),
      MarkerId("130"),
      MarkerId("131"),
      MarkerId("132"),
      MarkerId("133"),
      MarkerId("134"),
      MarkerId("135"),
      MarkerId("136"),
      MarkerId("137")
    ];

    if (storeselected == 0) {
      for (storecount = 1; storecount < 138; storecount++) {
        slistMarkerIds.add(markerids[storecount]);
        setState(() {
          markers[markerids[storecount]] = Marker(
              markerId: markerids[storecount],
              position: LatLng(lats[storecount], lngs[storecount]),
              icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueViolet),
              infoWindow:
                  InfoWindow(title: titles[storecount], snippet: address[storecount]));
        });
      }
      storecount = 0;
      storeselected = 1;
    } else {
      for (storecount = 0; storecount < 138; storecount++) {
        slistMarkerIds.add(markerids[storecount]);
        setState(() {
          markers[markerids[storecount]] = Marker(
              markerId: markerids[0],
              position: LatLng(lats[0], lngs[0]),
              infoWindow: InfoWindow(title: titles[0], snippet: address[0]));
        });
      }
      storecount = 0;
      storeselected = 0;
    }
  }

  void _onPoliceMarkerButtonPressed() {
    final lats = [
      36.306473,
      37.51008032,
      37.52161981,
      37.50921034,
      37.51464565,
      37.51598504,
      37.51551574,
      37.51591242,
      37.51925012,
      37.53026301,
      37.4936432,
      37.49592025,
      37.502035,
      37.49356643,
      37.49319188,
      37.48549069,
      37.48219321,
      37.4915528,
      37.47383344
    ];

    final lngs = [
      127.342582,
      127.0668859,
      127.0540971,
      127.0410462,
      127.0290996,
      127.0338307,
      127.0602322,
      127.0428601,
      127.0240332,
      127.0357264,
      127.0772119,
      127.0626571,
      127.0436963,
      127.082884,
      127.0832273,
      127.0564047,
      127.0505585,
      127.103165,
      127.1019595
    ];

    final titles = [
      "건양대학교병원",
      "서울강남경찰서",
      "강남경찰서 청담파출소",
      "역삼지구대",
      "논현1파출소",
      "논현2파출소",
      "삼성1파출소",
      "삼성2파출소",
      "신사파출소",
      "압구정파출소",
      "서울수서경찰서",
      "대치지구대",
      "도곡지구대",
      "일원지구대",
      "일원파출소",
      "개포지구대",
      "개포파출소",
      "수서파출소",
      "대왕파출소"
    ];

    final address = [
      "대전광역시 서구 가수원동 관저동로 158",
      "서울시 강남구 테헤란로114길 11 강남경찰서",
      "서울 강남구 학동로95길 19",
      "서울 강남구 언주로108길 20",
      "서울 강남구 학동로 169",
      "서울 강남구 학동로 227",
      "서울 강남구 영동대로 112길 4",
      "서울특별시 강남구 삼성동 선릉로 626",
      "서울 강남구 도산대로 143",
      "서울 강남구 압구정로 311",
      "서울시 강남구 개포로 617",
      "서울 강남구 삼성로 203",
      "서울 강남구 언주로 426",
      "서울 강남구 일원로3길 35",
      "서울특별시 강남구 일원동",
      "서울 강남구 개포로 261",
      "서울특별시 강남구 개포동 1268",
      "서울 강남구 밤고개로1길 48",
      "서울 강남구 헌릉로 623",
    ];

    final markerids = [
      MarkerId("0"),
      MarkerId("138"),
      MarkerId("139"),
      MarkerId("140"),
      MarkerId("141"),
      MarkerId("142"),
      MarkerId("143"),
      MarkerId("144"),
      MarkerId("145"),
      MarkerId("146"),
      MarkerId("147"),
      MarkerId("148"),
      MarkerId("149"),
      MarkerId("150"),
      MarkerId("151"),
      MarkerId("152"),
      MarkerId("153"),
      MarkerId("154"),
      MarkerId("155"),
    ];

    if (policeselected == 0) {
      for (policecount = 1; policecount < 19; policecount++) {
        plistMarkerIds.add(markerids[policecount]);
        setState(() {
          markers[markerids[policecount]] = Marker(
              markerId: markerids[policecount],
              position: LatLng(lats[policecount], lngs[policecount]),
              icon: BitmapDescriptor.defaultMarkerWithHue(BitmapDescriptor.hueAzure),
              infoWindow:
                  InfoWindow(title: titles[policecount], snippet: address[policecount]));
        });
      }
      policecount = 0;
      policeselected = 1;
    } else {
      for (policecount = 0; policecount < 19; policecount++) {
        plistMarkerIds.add(markerids[policecount]);
        setState(() {
          markers[markerids[policecount]] = Marker(
              markerId: markerids[0],
              position: LatLng(lats[0], lngs[0]),
              infoWindow: InfoWindow(title: titles[0], snippet: address[0]));
        });
      }
      policecount = 0;
      policeselected = 0;
    }
  }
}
